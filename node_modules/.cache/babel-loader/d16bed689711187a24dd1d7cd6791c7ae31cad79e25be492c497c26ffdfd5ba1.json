{"ast":null,"code":"var _jsxFileName = \"/Users/lewis/Documents/apps/Pikross/src/Grid.js\";\nimport React from 'react';\nimport './Grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet clueSize = 0;\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction handleClick(i) {\n  return;\n}\nfunction Grid(level) {\n  clueSize = level.clueSize;\n  var rows = [];\n  for (let x = 0; x < clueSize; x++) {\n    rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divRow\",\n      children: [/*#__PURE__*/_jsxDEV(\"clueRow\", {\n        rowNum: x,\n        clues: level.cluesX[x],\n        width: level.width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 39\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 116\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }, this));\n  }\n  for (let i = clueSize; i < level.height + clueSize; i++) {\n    rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divRow\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        rowNum: i,\n        clues: level.cluesY[i],\n        width: level.width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 39\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 103\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }, this));\n  }\n  return rows;\n}\n_c2 = Grid;\nfunction Row(rowNum, clues, width) {\n  var squareRow = [];\n  for (let i = 0; i < clueSize; i++) {\n    squareRow.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: clues[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this));\n  }\n  for (let j = 0; j < width; j++) {\n    squareRow.push( /*#__PURE__*/_jsxDEV(Square, {\n      value: ' ',\n      onSquareClick: () => handleClick(rowNum + j)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }, this));\n  }\n  return squareRow;\n}\n_c3 = Row;\nfunction clueRow(rowNum, clues, width) {\n  var squareRow = [];\n  for (let i = 0; i < clueSize; i++) {\n    squareRow.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"fillerRow\",\n      children: \"\\\" \\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this));\n  }\n  for (let j = 0; j < width; j++) {\n    squareRow.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"clueRow\",\n      children: [\" \", clues[j]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this));\n  }\n  return squareRow;\n}\nexport default Grid;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"Row\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","clueSize","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","handleClick","i","Grid","level","rows","x","push","rowNum","clues","cluesX","width","height","Row","cluesY","_c2","squareRow","j","_c3","clueRow","$RefreshReg$"],"sources":["/Users/lewis/Documents/apps/Pikross/src/Grid.js"],"sourcesContent":["import React from 'react';\nimport './Grid.css';\nlet clueSize=0;\n\nfunction Square({value,onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction handleClick(i){\n  return;\n}\nfunction Grid(level) {\nclueSize=level.clueSize;\nvar rows = [];\n  for(let x= 0; x < clueSize; x++){\n    rows.push(<div className=\"divRow\"><clueRow rowNum={x} clues={level.cluesX[x]} width = {level.width}></clueRow> <br></br></div>);\n    }\n  for(let i = clueSize; i < (level.height+clueSize); i++){\n    rows.push(<div className=\"divRow\"><Row rowNum={i} clues={level.cluesY[i]} width = {level.width}/> <br></br> </div>);\n   }\n  return (rows);\n}\n\nfunction Row(rowNum,clues,width){\n var squareRow = [];\n for(let i = 0; i < clueSize; i++){\n  squareRow.push(<p>{clues[i]}</p>); \n }  \n for(let j = 0; j < width; j ++){\n   squareRow.push(<Square value={' '} onSquareClick={() => handleClick(rowNum+j)} />);\n  }\n  return(squareRow);\n}\n\nfunction clueRow(rowNum,clues, width){\n var squareRow = [];\n for(let i=0; i < clueSize; i++){\n  squareRow.push(<p className=\"fillerRow\">\" \"</p>);\n  }\n for(let j = 0; j < width; j ++){\n   squareRow.push(<p className=\"clueRow\"> {clues[j]}</p>);\n  }\n  return(squareRow);\n}\n\n\nexport default Grid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}