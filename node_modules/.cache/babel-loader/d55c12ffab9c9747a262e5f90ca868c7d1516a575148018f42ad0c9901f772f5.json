{"ast":null,"code":"var _jsxFileName = \"/Users/lewis/Documents/apps/Pikross/src/Grid.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  _s();\n  const [isClicked, setIsClicked] = React.useState(false);\n  const handleClick = () => {\n    setIsClicked(!isClicked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => {\n      handleClick();\n      onSquareClick(); // Call the provided onClick handler\n    },\n    style: {\n      backgroundColor: isClicked ? 'black' : 'white'\n    },\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Square, \"+2jvnzgqyS4sm44z1s1whgWD4Tg=\");\n_c = Square;\nfunction Grid({\n  level\n}) {\n  var rows = [];\n  for (let x = 0; x < level.clueSize; x++) {\n    rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divRow\",\n      children: [/*#__PURE__*/_jsxDEV(ClueRow, {\n        rowNum: x,\n        clues: [...level.cluesX[x]],\n        width: level.width,\n        clueSize: level.clueSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 107\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  }\n  for (let i = 0; i < level.height; i++) {\n    rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divRow\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        rowNum: i + level.clueSize,\n        clues: [...level.cluesY[i]],\n        width: level.width,\n        clueSize: level.clueSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 118\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this));\n  }\n  return rows;\n}\n_c2 = Grid;\nfunction Row({\n  rowNum,\n  clues,\n  width,\n  clueSize\n}) {\n  var squareRow = [];\n  for (let i = 0; i < clueSize; i++) {\n    squareRow.push( /*#__PURE__*/_jsxDEV(Square, {\n      value: clues[i],\n      onSquareClick: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this));\n  }\n  for (let j = 0; j < width; j++) {\n    squareRow.push( /*#__PURE__*/_jsxDEV(Square, {\n      value: ' ',\n      onSquareClick: () => handleClick(rowNum + j)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this));\n  }\n  return squareRow;\n}\n_c3 = Row;\nfunction ClueRow({\n  rowNum,\n  clues,\n  width,\n  clueSize\n}) {\n  var squareRow = [];\n  for (let i = 0; i < clueSize; i++) {\n    squareRow.push( /*#__PURE__*/_jsxDEV(Square, {\n      value: ' ',\n      onSquareClick: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this));\n  }\n  for (let j = 0; j < width; j++) {\n    squareRow.push( /*#__PURE__*/_jsxDEV(Square, {\n      value: clues[j],\n      onSquareClick: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this));\n  }\n  return squareRow;\n}\n_c4 = ClueRow;\nexport default Grid;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"ClueRow\");","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","Square","value","onSquareClick","_s","isClicked","setIsClicked","useState","handleClick","className","onClick","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","level","rows","x","clueSize","push","ClueRow","rowNum","clues","cluesX","width","i","height","Row","cluesY","_c2","squareRow","j","_c3","_c4","$RefreshReg$"],"sources":["/Users/lewis/Documents/apps/Pikross/src/Grid.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Grid.css';\n\nfunction Square({ value, onSquareClick }) {\n  const [isClicked, setIsClicked] = React.useState(false);\n\n  const handleClick = () => {\n    setIsClicked(!isClicked);\n  };\n\n  return (\n    <button\n      className=\"square\"\n      onClick={() => {\n        handleClick();\n        onSquareClick(); // Call the provided onClick handler\n      }}\n      style={{ backgroundColor: isClicked ? 'black' : 'white' }}\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Grid({ level }) {\n  var rows = [];\n  for (let x = 0; x < level.clueSize; x++) {\n    rows.push(\n      <div className=\"divRow\">\n        <ClueRow rowNum={x} clues={[...level.cluesX[x]]} width={level.width} clueSize={level.clueSize} /> <br />\n      </div>\n    );\n  }\n  for (let i = 0; i < level.height; i++) {\n    rows.push(\n      <div className=\"divRow\">\n        <Row rowNum={i+level.clueSize} clues={[...level.cluesY[i]]} width={level.width} clueSize={level.clueSize} /> <br />\n      </div>\n    );\n  }\n  return rows;\n}\n\nfunction Row({rowNum,clues,width,clueSize}){\n var squareRow = [];\n for(let i = 0; i < clueSize; i++){\n   squareRow.push(<Square value={clues[i]} onSquareClick={null} />);\n }  \n for(let j = 0; j < width; j ++){\n   squareRow.push(<Square value={' '} onSquareClick={() => handleClick(rowNum+j)} />);\n  }\n  return(squareRow);\n}\n\nfunction ClueRow({rowNum,clues, width,clueSize}){\n var squareRow = [];\n for(let i=0; i < clueSize; i++){\n   squareRow.push(<Square value={' '} onSquareClick={null} />);\n  }\n for(let j = 0; j < width; j ++){\n   squareRow.push(<Square value={clues[j]} onSquareClick={null} />);\n  }\n  return(squareRow);\n}\n\n\nexport default Grid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}